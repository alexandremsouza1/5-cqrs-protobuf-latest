// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.2
// source: core/settings.proto

package settingsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Environment int32

const (
	Environment_DEVELOPMENT Environment = 0
	Environment_PRODUCTION  Environment = 1
)

// Enum value maps for Environment.
var (
	Environment_name = map[int32]string{
		0: "DEVELOPMENT",
		1: "PRODUCTION",
	}
	Environment_value = map[string]int32{
		"DEVELOPMENT": 0,
		"PRODUCTION":  1,
	}
)

func (x Environment) Enum() *Environment {
	p := new(Environment)
	*p = x
	return p
}

func (x Environment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment) Descriptor() protoreflect.EnumDescriptor {
	return file_core_settings_proto_enumTypes[0].Descriptor()
}

func (Environment) Type() protoreflect.EnumType {
	return &file_core_settings_proto_enumTypes[0]
}

func (x Environment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment.Descriptor instead.
func (Environment) EnumDescriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{0}
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServeAddress            string      `protobuf:"bytes,1,opt,name=serve_address,json=serveAddress,proto3" json:"serve_address,omitempty"`
	GrpcWebServeAddress     string      `protobuf:"bytes,2,opt,name=grpc_web_serve_address,json=grpcWebServeAddress,proto3" json:"grpc_web_serve_address,omitempty"`
	GrpcGatewayServeAddress string      `protobuf:"bytes,3,opt,name=grpc_gateway_serve_address,json=grpcGatewayServeAddress,proto3" json:"grpc_gateway_serve_address,omitempty"`
	SourceUrl               string      `protobuf:"bytes,5,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	Environment             Environment `protobuf:"varint,6,opt,name=environment,proto3,enum=core.Environment" json:"environment,omitempty"`
	UseTls                  bool        `protobuf:"varint,14,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	TlsCertPath             string      `protobuf:"bytes,15,opt,name=tls_cert_path,json=tlsCertPath,proto3" json:"tls_cert_path,omitempty"`
	TlsKeyPath              string      `protobuf:"bytes,16,opt,name=tls_key_path,json=tlsKeyPath,proto3" json:"tls_key_path,omitempty"`
	// Individual service settings
	// InstrumentAPISettings instrument_api_settings = 20;
	// CustomerAPISettings customer_api_settings = 21;
	// EmailAPISettings email_api_settings = 22;
	// ProductAPISettings product_api_settings = 23;
	// ProductInfoAPISettings product_info_api_settings = 24;
	CustomerApiSettings          *CustomerAPISettings          `protobuf:"bytes,25,opt,name=customer_api_settings,json=customerApiSettings,proto3" json:"customer_api_settings,omitempty"`
	RedisSettings                *RedisSettings                `protobuf:"bytes,26,opt,name=redis_settings,json=redisSettings,proto3" json:"redis_settings,omitempty"`
	DatastoreConfig              *DataStoreConfig              `protobuf:"bytes,27,opt,name=datastore_config,json=datastoreConfig,proto3" json:"datastore_config,omitempty"`
	AuthorizationServiceSettings *AuthorizationServiceSettings `protobuf:"bytes,28,opt,name=authorization_service_settings,json=authorizationServiceSettings,proto3" json:"authorization_service_settings,omitempty"`
	DebugServiceSettings         *DebugServiceSettings         `protobuf:"bytes,29,opt,name=debug_service_settings,json=debugServiceSettings,proto3" json:"debug_service_settings,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{0}
}

func (x *Settings) GetServeAddress() string {
	if x != nil {
		return x.ServeAddress
	}
	return ""
}

func (x *Settings) GetGrpcWebServeAddress() string {
	if x != nil {
		return x.GrpcWebServeAddress
	}
	return ""
}

func (x *Settings) GetGrpcGatewayServeAddress() string {
	if x != nil {
		return x.GrpcGatewayServeAddress
	}
	return ""
}

func (x *Settings) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *Settings) GetEnvironment() Environment {
	if x != nil {
		return x.Environment
	}
	return Environment_DEVELOPMENT
}

func (x *Settings) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *Settings) GetTlsCertPath() string {
	if x != nil {
		return x.TlsCertPath
	}
	return ""
}

func (x *Settings) GetTlsKeyPath() string {
	if x != nil {
		return x.TlsKeyPath
	}
	return ""
}

func (x *Settings) GetCustomerApiSettings() *CustomerAPISettings {
	if x != nil {
		return x.CustomerApiSettings
	}
	return nil
}

func (x *Settings) GetRedisSettings() *RedisSettings {
	if x != nil {
		return x.RedisSettings
	}
	return nil
}

func (x *Settings) GetDatastoreConfig() *DataStoreConfig {
	if x != nil {
		return x.DatastoreConfig
	}
	return nil
}

func (x *Settings) GetAuthorizationServiceSettings() *AuthorizationServiceSettings {
	if x != nil {
		return x.AuthorizationServiceSettings
	}
	return nil
}

func (x *Settings) GetDebugServiceSettings() *DebugServiceSettings {
	if x != nil {
		return x.DebugServiceSettings
	}
	return nil
}

type CustomerAPISettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultUrl  string             `protobuf:"bytes,1,opt,name=default_url,json=defaultUrl,proto3" json:"default_url,omitempty"`
	MongoConfig *MongoClientConfig `protobuf:"bytes,2,opt,name=mongo_config,json=mongoConfig,proto3" json:"mongo_config,omitempty"`
}

func (x *CustomerAPISettings) Reset() {
	*x = CustomerAPISettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAPISettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAPISettings) ProtoMessage() {}

func (x *CustomerAPISettings) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAPISettings.ProtoReflect.Descriptor instead.
func (*CustomerAPISettings) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{1}
}

func (x *CustomerAPISettings) GetDefaultUrl() string {
	if x != nil {
		return x.DefaultUrl
	}
	return ""
}

func (x *CustomerAPISettings) GetMongoConfig() *MongoClientConfig {
	if x != nil {
		return x.MongoConfig
	}
	return nil
}

type RedisSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs      string `protobuf:"bytes,1,opt,name=addrs,proto3" json:"addrs,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Expiration int32  `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *RedisSettings) Reset() {
	*x = RedisSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisSettings) ProtoMessage() {}

func (x *RedisSettings) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisSettings.ProtoReflect.Descriptor instead.
func (*RedisSettings) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{2}
}

func (x *RedisSettings) GetAddrs() string {
	if x != nil {
		return x.Addrs
	}
	return ""
}

func (x *RedisSettings) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RedisSettings) GetExpiration() int32 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type DataStoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn      string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *DataStoreConfig) Reset() {
	*x = DataStoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataStoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStoreConfig) ProtoMessage() {}

func (x *DataStoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataStoreConfig.ProtoReflect.Descriptor instead.
func (*DataStoreConfig) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{3}
}

func (x *DataStoreConfig) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *DataStoreConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DataStoreConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DataStoreConfig) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type AuthorizationServiceSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *AuthorizationServiceSettings) Reset() {
	*x = AuthorizationServiceSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationServiceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationServiceSettings) ProtoMessage() {}

func (x *AuthorizationServiceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationServiceSettings.ProtoReflect.Descriptor instead.
func (*AuthorizationServiceSettings) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{4}
}

func (x *AuthorizationServiceSettings) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type DebugServiceSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServeAddress        string `protobuf:"bytes,1,opt,name=serve_address,json=serveAddress,proto3" json:"serve_address,omitempty"`
	EnableProfileServer bool   `protobuf:"varint,2,opt,name=enable_profile_server,json=enableProfileServer,proto3" json:"enable_profile_server,omitempty"`
}

func (x *DebugServiceSettings) Reset() {
	*x = DebugServiceSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugServiceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugServiceSettings) ProtoMessage() {}

func (x *DebugServiceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugServiceSettings.ProtoReflect.Descriptor instead.
func (*DebugServiceSettings) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{5}
}

func (x *DebugServiceSettings) GetServeAddress() string {
	if x != nil {
		return x.ServeAddress
	}
	return ""
}

func (x *DebugServiceSettings) GetEnableProfileServer() bool {
	if x != nil {
		return x.EnableProfileServer
	}
	return false
}

type MongoClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	DatabaseName   string `protobuf:"bytes,2,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	CollectionName string `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	ContextTimeout int64  `protobuf:"varint,4,opt,name=context_timeout,json=contextTimeout,proto3" json:"context_timeout,omitempty"`
}

func (x *MongoClientConfig) Reset() {
	*x = MongoClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MongoClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoClientConfig) ProtoMessage() {}

func (x *MongoClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_core_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoClientConfig.ProtoReflect.Descriptor instead.
func (*MongoClientConfig) Descriptor() ([]byte, []int) {
	return file_core_settings_proto_rawDescGZIP(), []int{6}
}

func (x *MongoClientConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MongoClientConfig) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *MongoClientConfig) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *MongoClientConfig) GetContextTimeout() int64 {
	if x != nil {
		return x.ContextTimeout
	}
	return 0
}

var File_core_settings_proto protoreflect.FileDescriptor

var file_core_settings_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xdd, 0x05, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a,
	0x16, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67,
	0x72, 0x70, 0x63, 0x57, 0x65, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x72, 0x70, 0x63, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x33,
	0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d,
	0x74, 0x6c, 0x73, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6c, 0x73, 0x43, 0x65, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6c, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x4d, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x3a, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a,
	0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x68, 0x0a, 0x1e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x1c, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x14, 0x64, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x72, 0x0a, 0x13, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x50, 0x49, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x61, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x1c, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x14, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x2a, 0x2e, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f,
	0x50, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x42, 0x1a, 0x5a, 0x18, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_settings_proto_rawDescOnce sync.Once
	file_core_settings_proto_rawDescData = file_core_settings_proto_rawDesc
)

func file_core_settings_proto_rawDescGZIP() []byte {
	file_core_settings_proto_rawDescOnce.Do(func() {
		file_core_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_settings_proto_rawDescData)
	})
	return file_core_settings_proto_rawDescData
}

var file_core_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_core_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_core_settings_proto_goTypes = []interface{}{
	(Environment)(0),                     // 0: core.Environment
	(*Settings)(nil),                     // 1: core.Settings
	(*CustomerAPISettings)(nil),          // 2: core.CustomerAPISettings
	(*RedisSettings)(nil),                // 3: core.RedisSettings
	(*DataStoreConfig)(nil),              // 4: core.DataStoreConfig
	(*AuthorizationServiceSettings)(nil), // 5: core.AuthorizationServiceSettings
	(*DebugServiceSettings)(nil),         // 6: core.DebugServiceSettings
	(*MongoClientConfig)(nil),            // 7: core.MongoClientConfig
}
var file_core_settings_proto_depIdxs = []int32{
	0, // 0: core.Settings.environment:type_name -> core.Environment
	2, // 1: core.Settings.customer_api_settings:type_name -> core.CustomerAPISettings
	3, // 2: core.Settings.redis_settings:type_name -> core.RedisSettings
	4, // 3: core.Settings.datastore_config:type_name -> core.DataStoreConfig
	5, // 4: core.Settings.authorization_service_settings:type_name -> core.AuthorizationServiceSettings
	6, // 5: core.Settings.debug_service_settings:type_name -> core.DebugServiceSettings
	7, // 6: core.CustomerAPISettings.mongo_config:type_name -> core.MongoClientConfig
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_core_settings_proto_init() }
func file_core_settings_proto_init() {
	if File_core_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAPISettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataStoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationServiceSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugServiceSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MongoClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_settings_proto_goTypes,
		DependencyIndexes: file_core_settings_proto_depIdxs,
		EnumInfos:         file_core_settings_proto_enumTypes,
		MessageInfos:      file_core_settings_proto_msgTypes,
	}.Build()
	File_core_settings_proto = out.File
	file_core_settings_proto_rawDesc = nil
	file_core_settings_proto_goTypes = nil
	file_core_settings_proto_depIdxs = nil
}
